X <- array( c(X1,X2), dim=c(dim(X1),2) )
model <- trainr(Y=Y,
X=X,
learningrate   =  0.1,
hidden_dim     = 10,
start_from_end = TRUE )
plot(colMeans(model$error),type='l',
xlab='epoch',
ylab='errors'                  )
A1 = int2bin( sample(0:127, 7000, replace=TRUE) )
A2 = int2bin( sample(0:127, 7000, replace=TRUE) )
A <- array( c(A1,A2), dim=c(dim(A1),2) )
B  <- predictr(model,
A     )
A1 <- bin2int(A1)
A2 <- bin2int(A2)
B  <- bin2int(B)
hist( B-(A1+A2) )
detach("package:rnn", unload=TRUE)
install.packages("RSNNS")
install.packages("hydroGOF")
?mlp
??mlp
??mlp
View(iris)
View(outputs)
View(predictions)
View(inputs)
errror
error
patset
snnsObject
res
patset
View(iris)
View(iris)
class(iris)
View(outputs)
class(output)
class(outputs)
class(inputs)
View(predictions)
View(outputs)
View(outputs)
View(predictions)
View(inputs)
install.packages("sigmoid")
library("sigmoid", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
a <- seq(-10,10)
( b <- sigmoid(a) )
plot(b)
hist( a - sigmoid(b, inverse=TRUE) )
( c <- sigmoid(a, SoftMax=TRUE) )
plot(c)
args(sigmoid)
?sigmoid
??sigmoid
x = seq(1,5, by=0.05)
qplot(sigmoid(x))
x = seq(1,5, by=0.05)
plot(sigmoid(x))
plot(sigmoid(c))
x <- seq(-5, 5, 0.01)
plot(x, sigmoid(x), col='blue')
plot(x,name, col='blue')
plot(x, sigmoid(x), col='red')
summary(model)
library("nnet")
library(nnet)
mod <- nnet(Y1 ~ X1 + X2 + X3, data = neuraldat, size = 1
)
library(nnet)
mod <- nnet(Y1 ~ X1 + X2 + X3, data = neuraldat, size = 10)
library(NeuralNetTools)
data(neuraldat)
library(nnet)
mod <- nnet(Y1 ~ X1 + X2 + X3, data = neuraldat, size = 10)
par(mar = numeric(4))
plotnet(mod)
library(nnet)
mod <- nnet(Y1 ~ X1 + X2 + X3+ X4, data = neuraldat, size = 10)
nerualdat
neuraldat
head(neuraldat)
library(nnet)
mod <- nnet(Y1 ~ X1 + X2 + X3+ Y1, Y2, data = neuraldat, size = 10)
par(mar = numeric(4))
plotnet(mod)
plotnet(mod)
?neuralnet
??neuralnet
?rnn
??rnn
?lapply
?slip
?split
args(lapply)
str(split)
x <- c(rnorm(10), runif(10),rnorm(10,1))
f <- gl(3,10)
split(x,gl)
split(x,f)
f
?gl
a <-gl(5,1)
a
a <-gl(5,5)
a
gl(10,5)
a <- gl(2,2,20)
a
lapply(split(x,f),mean)
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans (x[,c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans (x[,c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans (x[,c("Ozone", "Solar.R", "Wind")] na.rm = TRUE))
sapply(s, function(x) colMeans (x[,c("Ozone", "Solar.R", "Wind")] na.rm = TRUE))
sapply(s, function(x) colMeans (x[,c("Ozone", "Solar.R", "Wind")], na.rm = TRUE))
?interaction
swirl()
swirl::play()
library(swirl)
swirl()
1
swirl()
main
quit
quit
main()
quit()
library("swirl")
swirl()
main()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6,))
unique(c(3,4,5,5,5,6,6,4))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply((unique_vals, function(elem) elem[2])
lapply((unique_vals,function(elem) elem[2])
lapply((unique_vals, function(elem) elem[2])
unique_vals
lapply(unique_vals, function(elem) elem[2])
main()
main()
sapply(flags,unique)
vapply(flags,unique, numeric(1))
ok()
sapply(flags,class)
sapply(flags,class, character(1))
ok()
vapply(flags,class, character(1))
?tapply
flags$landmass
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass , mean)
tapply(flags$population,flags$red, summary)
tapply(flags$population,flags$landmass, summary)
library(datasets)
data(iris)
library(datasets)
data(iris)
?iris
a <- iris$Sepal.Length
mean(a)
apply(iris, 1, mean)
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
apply(mtcars, 2, mean)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
?abs
str(abs)
a <- with(mtcars, tapply(mpg, cyl, mean))
dim(a)
class(a)
a[0,1]
a[1,1]
a[,1]
a[2,]
a[2]
a[2][1]
a[2][2]
a[2][2]
a[3]
abs(15.1)
lapply(a,abs)
sapply(a,abs)
b <- sapply(a,abs)
b
dim(b)
class(b)
b <- lapply(a,abs)
class(b)
b[1]
b$`8` - b$`4`
b$`4` - b$`8`
debug(ls)
ls
debug(ls)
ls
ls
ls
ls
ls
ls
ls
ls
ls
ls
ls
ls
ls
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
?xml
??xml
install.packages("XLConnect")
install.packages(c("xlsx", "XLConnect"))
install.packages("xlsx")
R CMD javareconf -e
install.packages("RMySQL")
install.packages("RMySQL")
library("RMySQl")
library("RMySql")
library("RMySQL")
?dbConnect
con <- dbConnect(MySQL(), user = "root", password="thidarMoe@20", dbname = "wut", host="localhost")
con <- dbConnect(MySQL(), user = "root", password="thidarMoe@20", dbname = "wut", host="localhost")
con <- dbConnect(MySQL(), user= "root", password="thidarMoe@20", dbname = "wut")
con <- dbConnect(MySQL(), dbname = "wut")
con <- dbConnect(MySQL(), user = "root", password="thidarMoe@20", dbname = "wut", host="127.0.0.1")
result <- dbGetQuery(con, "show databases;")
result
allTable <- dbListTables(con)
allTable
rs <- dbSendQuery(con, "select name from customer limit 10;")
rs <- dbSendQuery(con, "select name from CUSTOMER limit 10;")
rs <- dbSendQuery(con, "select CUSTNO from CUSTOMER ;")
data <- fetch(rs, n=5)
dbClearResult(rs)
dbDisconnect(con)
install.packages("rhdf5")
install.packages("h5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
setwd
setwd("~/Desktop/R programming/Data Science Specalization Coursera/Course 3")
install.packages("h5")
library(rhdf5)
created <- h5createFile("h5examp.h5")
created
created <- h5createFile("h5examp.h5")
created <- h5createGroup("h5examp.h5","wut")
created <- h5createGroup("h5examp.h5","hmone")
created <- h5createGroup("h5examp.h5","wut/hlaing")
h5ls("h5examp.h5")
try_matrix <- matrix(1:10, nrow = 5, ncol = 1)
h5write(try_matrix,"h5examp.h5","wut/try_matrix")
try_matrix1 <- array(seq(0.1,2.0, by=0.1), dim=c(5,2,2))
h5write(try_matrix1,"h5examp.h5","wut/hlaing/try_matrix1")
h5ls("h5examp.h5")
try_matrix <- matrix(1:10, nrow = 5, ncol = 2)
h5write(try_matrix,"h5examp.h5","wut/try_matrix")
try_matrix1 <- array(seq(0.1,2.0, by=0.1), dim=c(5,2,2))
h5write(try_matrix1,"h5examp.h5","wut/hlaing/try_matrix1")
h5ls("h5examp.h5")
attr(try_matrix1,"scale") <- "liter"
h5ls("h5examp.h5")
try_matrix <- matrix(1:10, nrow = 5, ncol = 2)
h5write(try_matrix,"h5examp.h5","wut/try_matrix")
h5ls("h5examp.h5")
df <- data.frame(1L:5L, seq(0,1, length.out = 5),c("a","b","c","d","s"),stringsAsFactors = F)
h5write(df, "h5exam.h5","df")
df <- data.frame(1L:5L, seq(0,1, length.out = 5),c("a","b","c","d","s"),stringsAsFactors = F)
h5write(df, "h5examp.h5","df")
h5ls("h5examp.h5")
readtry_matirx
readtry_matirx <- h5read("h5examp.h5", "wut/try_matrix")
readtry_matirx
con <- url("https://scholar.google.com/citations?user=HI-I6C0AAAAJ")
htmlCode <- readLines(con)
close(con)
htmlCode
require("XML")
url<-"https://scholar.google.com/citations?user=HI-I6C0AAAAJ"
html <- htmlTreeParse(url,useInternalNodes = T)
xpathSApply(html,"//title", xmlValue)
install.packages(httr)
install.packages("httr")
require("httr")
html2<- GET(url)
content2 <- content(html2, as="text")
parseHtml <- htmlParse(content2, asText = T)
xpathSApply(parseHtml,"//title",xmlValue)
pg2 <- GET("http://httphin.org/basic-auth/user/passwd",
authenticate("user","passwd"))
pg2
pg2 <- GET("http://httphin.org/basic-auth/user/passwd",
authenticate("user","passwd"), method = "curl")
pg2
google <- handle("http://google.com")
pg1 <- GET(handle = google, path="/")
pg2 <- GET(handle = googel, path="search")
require("httr")
myapp <- oauth_app("twitter", key="VejJHnCDoLHT3U2BHRMgBaT5m",
secret = "	rC0upwpXNCuCWtLsddKTZIU55bcZZoAYi2wH2d9jfYpveKV6Y1")
sig <- sign_oauth1.0(myapp, token="1450853623-5hqsxLoG8Of6VdrFuzWvtmq2OQ6YJG4Q4d34rbX",
token_secret = "FpMheVN4IIJ26PT3dF0ALFEr0SV23ioBAVJNiLNtLW33Z")
homeTL <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",sig)
json1 <- content(homeTL)
json2 <- jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json1 <- content(homeTL)
json2 <- jsonlite::fromJSON(toJSON(json1))
?fromJSON
json2 <- jsonlite::fromJSON(toJSON(json1))
require("jsonlite")
json2 <- fromJSON(toJSON(json1))
json2[1,1:4]
json2
sig <- sign_oauth1.0(myapp, token="5hqsxLoG8Of6VdrFuzWvtmq2OQ6YJG4Q4d34rbX",
token_secret = "FpMheVN4IIJ26PT3dF0ALFEr0SV23ioBAVJNiLNtLW33Z")
homeTL <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",sig)
json1 <- content(homeTL)
json2 <- fromJSON(toJSON(json1))
json2
myapp <- oauth_app("twitter", key="VejJHnCDoLHT3U2BHRMgBaT5m",
secret = "	rC0upwpXNCuCWtLsddKTZIU55bcZZoAYi2wH2d9jfYpveKV6Y1")
#key = comsumerkey, secret="cumsumersecretkey"
sig <- sign_oauth1.0(myapp, token="1450853623-5hqsxLoG8Of6VdrFuzWvtmq2OQ6YJG4Q4d34rbX",
token_secret = "FpMheVN4IIJ26PT3dF0ALFEr0SV23ioBAVJNiLNtLW33Z")
#token = "yourToken", token_secret = "yourTokenSecret"
homeTL <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",sig)
json1 <- content(homeTL)
json2 <- fromJSON(toJSON(json1))
json2
yapp <- oauth_app("twitter", key="VejJHnCDoLHT3U2BHRMgBaT5m",
secret = "	rC0upwpXNCuCWtLsddKTZIU55bcZZoAYi2wH2d9jfYpveKV6Y1")
#key = comsumerkey, secret="cumsumersecretkey"
sig <- sign_oauth1.0(myapp, token="5hqsxLoG8Of6VdrFuzWvtmq2OQ6YJG4Q4d34rbX",
token_secret = "FpMheVN4IIJ26PT3dF0ALFEr0SV23ioBAVJNiLNtLW33Z")
#token = "yourToken", token_secret = "yourTokenSecret"
homeTL <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",sig)
json1 <- content(homeTL)
json2 <- fromJSON(toJSON(json1))
myapp <- oauth_app("twitter", key="VejJHnCDoLHT3U2BHRMgBaT5m",
secret = "	rC0upwpXNCuCWtLsddKTZIU55bcZZoAYi2wH2d9jfYpveKV6Y1")
#key = comsumerkey, secret="cumsumersecretkey"
sig <- sign_oauth1.0(myapp, token="5hqsxLoG8Of6VdrFuzWvtmq2OQ6YJG4Q4d34rbX",
token_secret = "FpMheVN4IIJ26PT3dF0ALFEr0SV23ioBAVJNiLNtLW33Z")
#token = "yourToken", token_secret = "yourTokenSecret"
homeTL <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",sig)
json1 <- content(homeTL)
json2 <- fromJSON(toJSON(json1))
json2
myapp <- oauth_app("twitter", key="VejJHnCDoLHT3U2BHRMgBaT5m",
secret = "	rC0upwpXNCuCWtLsddKTZIU55bcZZoAYi2wH2d9jfYpveKV6Y1")
#key = comsumerkey, secret="cumsumersecretkey"
sig <- sign_oauth1.0(myapp, token="1450853623-5hqsxLoG8Of6VdrFuzWvtmq2OQ6YJG4Q4d34rbX",
token_secret = "FpMheVN4IIJ26PT3dF0ALFEr0SV23ioBAVJNiLNtLW33Z")
#token = "yourToken", token_secret = "yourTokenSecret"
homeTL <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",sig)
json1 <- content(homeTL)
json2 <- fromJSON(toJSON(json1))
json2
require("jsonlite")
myapp <- oauth_app("twitter", key="VejJHnCDoLHT3U2BHRMgBaT5m",
secret = "rC0upwpXNCuCWtLsddKTZIU55bcZZoAYi2wH2d9jfYpveKV6Y1")
#key = comsumerkey, secret="cumsumersecretkey"
sig <- sign_oauth1.0(myapp, token="1450853623-5hqsxLoG8Of6VdrFuzWvtmq2OQ6YJG4Q4d34rbX",
token_secret = "FpMheVN4IIJ26PT3dF0ALFEr0SV23ioBAVJNiLNtLW33Z")
#token = "yourToken", token_secret = "yourTokenSecret"
homeTL <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",sig)
json1 <- content(homeTL)
json2 <- fromJSON(toJSON(json1))
json2
json2 <- fromJSON(toJSON(json1))
json2[1,1:4]
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "228a956ecbbe179a81d6",
secret = "1e820dca49ec2d33170e10e9be6c5e357ceb5272")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
try <- content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
myapp <- oauth_app("github",
key = "228a956ecbbe179a81d6",
secret = "1e820dca49ec2d33170e10e9be6c5e357ceb5272")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
try <- content(req)
str(try)
head(try)
length(try)
try[[1]]
try[[1]]$name
try[[1]]$created_at
for(i in 1:length(try)){
if(try[[i]]$name=="datasharing"){
ans <- try[[i]]$created_at
}
}
ans
install.packages("sqldf")
acs <- read.csv("quiz2q2.csv")
acs <- data.frame(acs)
ans <- sqldf("select pwgtp1 from acs where AGEP < 50")
library("sqldf")
ans <- sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
?sqldf()
con <- dbConnect(MySQL(), user = "root", password="thidarMoe@20", host="127.0.0.1")
sqldf("select distinct AGEP from acs")
dbDisconnect(con)
require("httr")
url<-"http://biostat.jhsph.edu/~jleek/contact.html"
html2<- GET(url)
content2 <- content(html2, as="text")
parseHtml <- htmlParse(content2, asText = T)
xpathSApply(parseHtml,"//title",xmlValue)
?nchar
class(content())
class(content2
)
nchar(content2)
head(content2)
a <- "<meta name="Distribution" content="Global" />"
nchar("<meta name="Distribution" content="Global" />")
parseHtml
class(parseHtml)
head(parseHtml)
parseHtml
library(sqldf)
acs <- read.csv("getdata_data_ss06pid.csv", header=T, sep=",")
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
length(unique(acs$AGEP))
unique(acs$AGEP
)
length(unique(acs$AGEP)
)
hurl <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(hurl)
htmlCode <- readLines(con)
close(con)
sapply(htmlCode[c(10, 20, 30, 100)], nchar)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
html2<- GET(url)
html2
content2 <- content(html2, as="text")
content2
head(content2)
data <- read.csv("getdata_wksst8110.for", header=T)
data <- read.csv("q5data.for", header=T)
head(data)
dim(data)
file_name <- "q5data.for"
file_name
df <- read.fwf(file=file_name,widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
head(df)
sum(df[, 4])
